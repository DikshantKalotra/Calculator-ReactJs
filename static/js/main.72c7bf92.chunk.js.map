{"version":3,"sources":["Button.js","Calculator.js","Footer.js","Title.js","OutputRow.js","OutputScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","type","value","label","onClick","calculate","Calculator","useState","input","output","text","setText","event","target","res","eval","err","undefined","toString","substr","length","className","id","Footer","Title","OutputRow","readOnly","name","OutputScreen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72c7bf92.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Button = (props) => {\r\n    return (\r\n        <input type=\"button\" value={props.label} onClick={props.calculate}/>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { OutputScreen } from './OutputScreen'\r\nimport { Button } from './Button'\r\nimport { Footer } from './Footer'\r\nimport { Title } from './Title'\r\n\r\nexport const Calculator = () => {\r\n    const [text, setText] = useState({input : '', output : ''})\r\n\r\n    function calculate(event) {\r\n        const value = event.target.value;\r\n        switch(value){\r\n            case '=': {\r\n                let res='';\r\n                if(text.input !== ''){\r\n                    try{ \r\n                        res = eval(text.input);\r\n                    }\r\n                    catch(err){\r\n                        setText({output: 'Mathematical Error'})\r\n                    }\r\n                    if( res === undefined){\r\n                        setText({output: 'Mathematical Error'})\r\n                    }\r\n                    else{\r\n                        setText({output: res, input:''})\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            case \"B\" : {\r\n                let input = text.input.toString()\r\n                input = input.substr(0, input.length-1)\r\n                setText({input: input})\r\n                break\r\n            }\r\n            case 'C' : {\r\n                setText({input: '', output: ''})\r\n                break\r\n            }\r\n            default : {\r\n                setText({input: text.input += value})\r\n                break\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"layer\">\r\n            <Title/>\r\n            <div className=\"calculator\">\r\n                <OutputScreen text={text}/>\r\n                <div className=\"buttons\" id=\"one\">\r\n                    <Button label={\"C\"} calculate={calculate}/>\r\n                    <Button label={\"%\"} calculate={calculate}/>\r\n                    <Button label={\"/\"} calculate={calculate}/>\r\n                    <Button label= {\"B\"} calculate={calculate}/>\r\n                </div>\r\n                <div className=\"buttons\" id=\"2\">\r\n                    <Button label={\"8\"} calculate={calculate}/>\r\n                    <Button label={\"9\"} calculate={calculate}/>\r\n                    <Button label={\"*\"} calculate={calculate}/>\r\n                    <Button label={\"7\"} calculate={calculate}/>\r\n                </div>\r\n                <div className=\"buttons\" id=\"3\">\r\n                    <Button label={\"4\"} calculate={calculate}/>\r\n                    <Button label={\"5\"} calculate={calculate}/>\r\n                    <Button label={\"6\"} calculate={calculate}/>\r\n                    <Button label={\"-\"} calculate={calculate}/>\r\n                </div>\r\n                <div className=\"buttons\" id=\"4\">\r\n                    <Button label={\"1\"} calculate={calculate}/>\r\n                    <Button label={\"2\"} calculate={calculate}/>\r\n                    <Button label={\"3\"} calculate={calculate}/>\r\n                    <Button label={\"+\"} calculate={calculate}/>\r\n                </div>\r\n                <div className=\"buttons\" id=\"5\">\r\n                    <Button label={\"0\"} calculate={calculate}/>\r\n                    <Button label={\".\"} calculate={calculate}/>\r\n                    <Button label={\"=\"} calculate={calculate}/>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            Note that &nbsp; ' % ' &nbsp; here is &nbsp; ' mod '&nbsp; and not&nbsp; ' percentage '\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Title = () => {\r\n    return (\r\n        <div className=\"calculator-title\">\r\n            CALCULATOR\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const OutputRow = (props) => {\r\n    return (\r\n        <div className=\"screen-row\">\r\n            <input type=\"text\" readOnly className={props.name} value={props.value}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { OutputRow } from \"./OutputRow\";\r\n\r\nexport const OutputScreen = (props) => {\r\n  return (\r\n    <div className=\"output-screen\">\r\n      <OutputRow name={\"upper\"} value={props.text.output}/>\r\n      <OutputRow name={\"lower\"} value={props.text.input}/>\r\n    </div>\r\n  );\r\n};\r\n","import './App.css';\nimport { Calculator } from './Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}